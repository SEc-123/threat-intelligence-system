import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';
import { User } from './User';
import { MonitorConfig } from './MonitorConfig';

@Entity()
export class Vulnerability {
  @PrimaryGeneratedColumn()
  id: number;

  @Column({ unique: true })
  cveId: string;

  @Column('float')
  cvssScore: number;

  @Column('text')
  description: string;

  @Column('jsonb')
  rawData: object;

  @Column({ 
    type: 'enum',
    enum: ['unprocessed', 'confirmed', 'mitigated', 'false_positive'],
    default: 'unprocessed'
  })
  status: string;

  @ManyToOne(() => User)
  owner: User;

  @ManyToOne(() => MonitorConfig)
  config: MonitorConfig;

  @Column({ type: 'timestamptz' })
  discoveredAt: Date;

  // 新增标准化字段
  @Column({ type: 'varchar', length: 20 })
  sourceSystem: 'ALIYUN' | 'NVD' | 'REDQUEEN';

  @Column('simple-json')
  rawIdentifier: { sourceId: string; sourceUrl: string };

  @Column({ unique: true })
  contentHash: string;
}
